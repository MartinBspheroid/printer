int testInclude(){
	return 1;
}

void  setInputSize( x1, y1, x2, y2 ){
	buf = buf .. "IP " .. x1 .." ".. y1 .." ".. x2 .." ".. y2 .. ";\n"
	send(data);
}
void  setScale( x, y )	{
	buf = buf .. "SC ".. "0 " .. x .. " 0 " .. y .. ";\n"
	send(data);
} 
void  drawLine( x1, y1, x2, y2){
move(x1, y1)
penDown()
move(x2, y2)
penUp()
send(data);
}

void  penUp(){
buf = buf .. "PU;\n"
send(data);
}

void  penDown(){
buf = buf .. "PD;\n"
send(data);
}

void   clearBuffer(){
	buf = buf .. ""
	send(data);
}

void  init(){
	buf = buf .. "IN;\n"
	send(data);
}

void  setCircleTolerance(tolerance){
	buf = buf .. "CT " .. tolerance .. ";\n"
	send(data);
	}

void  drawCircle( x, y, radius ){
	-- expect that pen is up
	move(x,y)
	penDown()
	buf  = buf .. "CI " .. radius .. ";\n"
	penUp()
	send(data);
}
void  drawSpline( x1, y1, x2, y2, angle ){
	--expect penUp
	move(x1, y1)
	penDown()
	buf = buf .. "AA " .. x2 .. " " .. y2 .. " " .. angle .. ";\n"
	penUp()
	send(data);
}

void  move(x, y ){
	buf = buf .. "PA " .. x .. " ".. y .. ";\n"
	-- this needs to have coords too
	send(data);
}

void  selectPen(number){
	buf = buf .. "SP" .. number ..";\n"
	send(data);
}

void  changeLineType( lineType ){
	buf = buf .. "LT " .. lineType .. ", 25;\n"
	send(data);
}